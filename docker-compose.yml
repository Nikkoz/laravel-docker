version: "3"

#Docker Networks
networks:
  project-network: &project_network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.220.0/28

#Volumes
volumes:
  redis-data:
  postgresdb-data:

services:
  #PHP Service
  &app-service app:
    build:
      context: ./
      dockerfile: docker/Dockerfile
    image: ${COMPOSE_PROJECT_NAME}_app
    container_name: ${COMPOSE_PROJECT_NAME}_app
    #user: "${USER_ID:-1000}:${GROUP_ID:-1000}"
    #restart: unless-stopped
    #hostname: *app-service
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
      REDIS_HOST: redis
      REDIS_PORT: &redis-port 6379
      DB_HOST: postgresdb
      DB_PORT: &postgresdb-port 5432
      DB_DATABASE: &postgresdb-db-name app
      DB_USERNAME: &postgresdb-username app
      DB_PASSWORD: &postgresdb-password secret
      SCHEDULE_PERIOD: 60
      #APP_ENV: local
      #APP_DEBUG: 'true'
      #HOME: /home/user
      XDEBUG_CONFIG: "remote_host=192.168.220.1 remote_enable=1"
      PHP_IDE_CONFIG: "serverName=Docker"
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    #- ~/.ssh:/home/docker-user/.ssh -- pass your local ssh key
    depends_on:
      - redis
      - postgresdb
    networks:
      - project-network

  #Nginx Service
  &nginx-service nginx:
    image: nginx:alpine
    container_name: ${COMPOSE_PROJECT_NAME}_nginx
    #restart: always
    ports:
      - "8089:80"
    # - "443:443"
    volumes:
      - ./:/var/www
    # - ./public:/var/www/public
      - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    # - ./docker/nginx/ssl:/etc/nginx/ssl
    environment:
      VIRTUAL_HOST: ${VIRTUAL_HOST}
      VIRTUAL_PORT: 8089
    working_dir: /var/www
    depends_on:
      - *app-service
    links:
      - 'app:app'
    networks:
      - project-network

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    # - ./storage/certs:/etc/nginx/certs
    depends_on:
      - *nginx-service
    networks:
      - project-network

  #DB Service
  postgresdb:
    build:
      context: ./
      dockerfile: docker/postgresdb/Dockerfile
    image: ${COMPOSE_PROJECT_NAME}_postgresdb
    container_name: ${COMPOSE_PROJECT_NAME}_postgresdb
    #restart: always
    volumes:
      - postgresdb-data:/var/lib/postgresql/data:rw
    environment:
      POSTGRES_USER: *postgresdb-username
      POSTGRES_DB: *postgresdb-db-name
      POSTGRES_PASSWORD: *postgresdb-password
    ports: [*postgresdb-port, '54322:5432']
    networks:
      - project-network

  node:
    build:
      context: ./
      dockerfile: docker/node/Dockerfile
    image: node
    container_name: ${COMPOSE_PROJECT_NAME}_node
    ports:
      - "3000:3000"
    tty: true
    volumes:
      - ./:/var/www
    networks:
      - project-network

  redis:
    image: redis:4.0.11-alpine
    container_name: ${COMPOSE_PROJECT_NAME}_redis
    restart: always
    command: redis-server
    volumes:
      - redis-data:/data:rw
    ports: [*redis-port, '16379:6379'] # Port 16379 for connecting from localhost
    networks:
      - project-network
